/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.3 .\public\models\square_shelves_single.glb -t -T 
Files: .\public\models\square_shelves_single.glb [14.18MB] > C:\Users\liubo\WebstormProjects\pu-master-commerce\square_shelves_single-transformed.glb [161.38KB] (99%)
*/

import * as THREE from "three";
import React, { JSX, useRef } from "react";
import { useGLTF, Instances, Instance } from "@react-three/drei";
import { GLTF } from "three-stdlib";
import { Vector3, Euler } from "three";

type GLTFResult = GLTF & {
  nodes: {
    Object_4: THREE.Mesh;
  };
  materials: {
    T_square_shelving_unit: THREE.MeshStandardMaterial;
  };
  animations: "";
};

export function SquareShelfModel(props: JSX.IntrinsicElements["group"]) {
  const { nodes, materials } = useGLTF(
    "/square_shelves_single-transformed.glb",
  ) as GLTFResult;
  return (
    <group {...props} dispose={null}>
      <mesh
        geometry={nodes.Object_4.geometry}
        material={materials.T_square_shelving_unit}
        position={[0.001, -0.735, 0]}
      />
    </group>
  );
}

// Instanced version of the SquareShelf model
export function SquareShelfInstances({
  count = 5,
  positions,
}: {
  count?: number;
  positions?: Vector3[];
}) {
  const { nodes, materials } = useGLTF(
    "/square_shelves_single-transformed.glb",
  ) as GLTFResult;

  // Default positions in a row against the back wall if none provided
  const defaultPositions =
    positions ||
    Array.from({ length: count }, (_, i) => {
      // Calculate position to line up shelves along the back wall
      const totalWidth = (count - 1) * 4; // Total width of all shelves with spacing
      const startX = -totalWidth / 2.75; // Start from the left side to center the row

      return new Vector3(
        startX + i * 3,
        -2,
        -8,
      );
    });

  const rotations = Array.from(
    { length: defaultPositions.length },
    () => new Euler(0, 0, 0),
  );

  return (
    <Instances limit={defaultPositions.length}>
      <primitive object={nodes.Object_4.geometry} />
      <primitive object={materials.T_square_shelving_unit} />

      {defaultPositions.map((pos, i) => (
        <Instance key={i} position={pos} rotation={rotations[i]} scale={2}>
          <group position={[0.001, -0.735, 0]} />
        </Instance>
      ))}
    </Instances>
  );
}

useGLTF.preload("/square_shelves_single-transformed.glb");
