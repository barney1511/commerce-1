/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.3 .\public\models\record_table.glb -t -T 
Files: .\public\models\record_table.glb [13.06MB] > C:\Users\liubo\WebstormProjects\pu-master-commerce\record_table-transformed.glb [1.02MB] (92%)
*/

import * as THREE from "three";
import React, { JSX } from "react";
import { useGLTF } from "@react-three/drei";
import { GLTF } from "three-stdlib";

type GLTFResult = GLTF & {
  nodes: {
    Object_4: THREE.Mesh;
    Object_6: THREE.Mesh;
    Object_10: THREE.Mesh;
  };
  materials: {
    M_vinyl_white: THREE.MeshStandardMaterial;
    M_vinyl_dark: THREE.MeshStandardMaterial;
    M_record_table: THREE.MeshStandardMaterial;
  };
  animations: "";
};

export function RecordTableModel(props: JSX.IntrinsicElements["group"]) {
  const { nodes, materials } = useGLTF(
    "/record_table-transformed.glb",
  ) as GLTFResult;
  return (
    <group {...props} dispose={null}>
      <mesh
        geometry={nodes.Object_4.geometry}
        material={materials.M_vinyl_white}
        position={[0.121, 0.431, 0.148]}
      />
      <mesh
        geometry={nodes.Object_6.geometry}
        material={materials.M_vinyl_dark}
        position={[0.181, 0.436, 0.148]}
      />
      <mesh
        geometry={nodes.Object_10.geometry}
        material={materials.M_record_table}
        position={[0, 0.581, 0.133]}
      />
    </group>
  );
}

useGLTF.preload("/record_table-transformed.glb");
