/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.3 .\public\models\decorative_picture_frame_ukkocfnbw_low.glb -t -T 
Files: .\public\models\decorative_picture_frame_ukkocfnbw_low.glb [3.04MB] > C:\Users\liubo\WebstormProjects\pu-master-commerce\decorative_picture_frame_ukkocfnbw_low-transformed.glb [463.1KB] (85%)
*/

import * as THREE from "three";
import React, { JSX } from "react";
import { useGLTF } from "@react-three/drei";
import { GLTF } from "three-stdlib";

type GLTFResult = GLTF & {
  nodes: {
    ukkocfnbw_LOD0_TIER3_000_MatID_1_0: THREE.Mesh;
  };
  materials: {
    Decorative_Picture_Frame_ukkocfnbw_Low: THREE.MeshStandardMaterial;
  };
  animations: "";
};

export function PictureFrameModel(props: JSX.IntrinsicElements["group"]) {
  const { nodes, materials } = useGLTF(
    "/decorative_picture_frame_ukkocfnbw_low-transformed.glb",
  ) as GLTFResult;
  return (
    <group {...props} dispose={null}>
      <mesh
        geometry={nodes.ukkocfnbw_LOD0_TIER3_000_MatID_1_0.geometry}
        material={materials.Decorative_Picture_Frame_ukkocfnbw_Low}
        scale={0.02}
      />
    </group>
  );
}

useGLTF.preload("/decorative_picture_frame_ukkocfnbw_low-transformed.glb");
