/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.3 C:\Users\liubo\WebstormProjects\pu-master-commerce\public\models\bench.glb -T -t 
Files: C:\Users\liubo\WebstormProjects\pu-master-commerce\public\models\bench.glb [18.52MB] > C:\Users\liubo\WebstormProjects\pu-master-commerce\bench-transformed.glb [203.3KB] (99%)
*/

import * as THREE from "three";
import React, { JSX } from "react";
import { useGLTF } from "@react-three/drei";
import { GLTF } from "three-stdlib";

type GLTFResult = GLTF & {
  nodes: {
    Bench_RAL_9005003_0: THREE.Mesh;
    Bench_Metal_3002_0: THREE.Mesh;
    ["Bench_Materi��l_0"]: THREE.Mesh;
  };
  materials: {
    ["RAL_9005.003"]: THREE.MeshStandardMaterial;
    ["Metal_3.002"]: THREE.MeshStandardMaterial;
    Materil: THREE.MeshStandardMaterial;
  };
  animations: "";
};

export function BenchModel(props: JSX.IntrinsicElements["group"]) {
  const { nodes, materials } = useGLTF("/bench-transformed.glb") as GLTFResult;
  return (
    <group {...props} dispose={null}>
      <mesh
        geometry={nodes.Bench_RAL_9005003_0.geometry}
        material={materials["RAL_9005.003"]}
        rotation={[-Math.PI / 2, 0, 0]}
      />
      <mesh
        geometry={nodes.Bench_Metal_3002_0.geometry}
        material={materials["Metal_3.002"]}
        rotation={[-Math.PI / 2, 0, 0]}
      />
      <mesh
        geometry={nodes["Bench_Materi��l_0"].geometry}
        material={materials.Materil}
        rotation={[-Math.PI / 2, 0, 0]}
      />
    </group>
  );
}

useGLTF.preload("/bench-transformed.glb");
